---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: e2e
  labels:
    app: redis
spec:
  ports:
    - port: 6379
      name: redis
  clusterIP: None
  selector:
    app: redis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: e2e
spec:
  selector:
    matchLabels:
      app: redis
  serviceName: "redis"
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: redis
          image: redis:7.2.3-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
              name: redis
---
apiVersion: v1
kind: Secret
metadata:
  name: mastodon-secret-env
  namespace: e2e
type: Opaque
stringData:
  LOCAL_DOMAIN: mastodon.waq-e2e.anqou.net
  REDIS_HOST: redis.e2e.svc
  REDIS_PORT: "6379"
  DB_HOST: postgres.e2e.svc
  DB_USER: mastodon
  DB_PASS: password
  DB_NAME: mastodon_production
  DB_PORT: "5432"
  IP_RETENTION_PERIOD: "31556952"
  SESSION_RETENTION_PERIOD: "31556952"
  SECRET_KEY_BASE: 928dab5fdf3cfd4a16e89ab92e343d9d3d96e232ee77bf9d0a18ea510d4231f0fb1425c51f3ca8cfb8f031ca6b7bc25a04e2aa2230e11b614b8215974bff23b6
  OTP_SECRET: a2679b530056aa9a5aa2c5956684bdab64480f69bd5252e5c9f5eb64c6ea1dbcece44195d7f9236f5bfccad421413fd606996ec53c082147303736921e4ad07b
  VAPID_PRIVATE_KEY: YMFYOwrat5ZQxRQmXka0oaHr56TpctygcO7XtYfuwCA=
  VAPID_PUBLIC_KEY: BNQoJF_o0Jk-soeZuqdGIx-8vjUfk6bH7ezFw3JtGl29iTUAz8OtjZl6wkb2Zz2I_ekokAk4lI-dyLiUpHLV6gA=

  # https://docs.joinmastodon.org/admin/config/#allowed_private_addresses
  ALLOWED_PRIVATE_ADDRESSES: "10.0.0.0/8"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mastodon-gateway-tls
  namespace: e2e
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mastodon-gateway-tls
  template:
    metadata:
      labels:
        app: mastodon-gateway-tls
    spec:
      containers:
        - name: nginx
          image: nginx:1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d
              readOnly: true
            - name: cert
              mountPath: /cert
      volumes:
        - name: nginx-conf
          configMap:
            name: mastodon-gateway-tls-nginx-conf
            items:
              - key: nginx.conf
                path: mastodon-gateway-tls.conf
        - name: cert
          secret:
            secretName: cert-mastodon
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mastodon-gateway-tls-nginx-conf
  namespace: e2e
data:
  nginx.conf: |
    upstream backend {
      server mastodon-gateway.e2e.svc.cluster.local:8080;
    }

    server {
      listen 80;
      listen [::]:80;
      server_name mastodon.waq-e2e.anqou.net;
      location / { return 301 https://$host$request_uri; }
    }

    server {
      listen 443 ssl http2;
      listen [::]:443 ssl http2;
      server_name mastodon.waq-e2e.anqou.net;

      ssl_certificate     /cert/tls.crt;
      ssl_certificate_key /cert/tls.key;

      location / { try_files $uri @proxy; }

      location @proxy {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Proxy "";
        proxy_pass_header Server;

        proxy_pass http://backend;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: mastodon-gateway-tls
  namespace: e2e
spec:
  ports:
    - port: 80
      name: http
    - port: 443
      name: https
  selector:
    app: mastodon-gateway-tls
