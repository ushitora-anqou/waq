# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
name: Publish Docker image to ghcr.io

on:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - uses: cachix/cachix-action@v14
        with:
          name: waq
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build :dev image
        run: |
          nix build .#docker
          docker load -i result

      - name: Prepare stuff necessary to build and push the final image
        run: |
          docker tag ghcr.io/ushitora-anqou/waq:dev localhost:5000/waq:dev
          docker push localhost:5000/waq:dev
          mkdir ci
          echo "FROM builder" > ci/Dockerfile

      - name: Build and push the final image
        uses: docker/build-push-action@v6
        with:
          context: ci
          build-contexts: |
            builder=docker-image://localhost:5000/waq:dev
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
